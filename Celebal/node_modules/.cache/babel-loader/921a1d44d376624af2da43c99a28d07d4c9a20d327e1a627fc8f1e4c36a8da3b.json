{"ast":null,"code":"import React from \"react\";\nconst emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\nconst panValidator = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\nconst aadharValidator = /^\\d{12}$/;\nconst phoneValidator = /^\\+\\d{1,3}\\d{10}$/;\nclass FormComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      showPassword: false,\n      phoneNo: \"\",\n      country: \"\",\n      city: \"\",\n      panNo: \"\",\n      aadharNo: \"\",\n      firstNameError: \"\",\n      lastNameError: \"\",\n      usernameError: \"\",\n      emailError: \"\",\n      passwordError: \"\",\n      phoneNoError: \"\",\n      countryError: \"\",\n      cityError: \"\",\n      panNoError: \"\",\n      aadharNoError: \"\",\n      isFormSubmitted: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.togglePasswordVisibility = this.togglePasswordVisibility.bind(this);\n    this.validateFirstName = this.validateFirstName.bind(this);\n    this.validateLastName = this.validateLastName.bind(this);\n    this.validateUsername = this.validateUsername.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n    this.validatePhoneNo = this.validatePhoneNo.bind(this);\n    this.validateCountry = this.validateCountry.bind(this);\n    this.validateCity = this.validateCity.bind(this);\n    this.validatePanNo = this.validatePanNo.bind(this);\n    this.validateAadharNo = this.validateAadharNo.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleBlur(event) {\n    const {\n      name\n    } = event.target;\n    this.validateField(name);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const formFields = [\"firstName\", \"lastName\", \"username\", \"email\", \"password\", \"phoneNo\", \"country\", \"city\", \"panNo\", \"aadharNo\"];\n    let isValid = true;\n    formFields.forEach(field => {\n      isValid = this.validateField(field) && isValid;\n    });\n    if (isValid) {\n      this.setState({\n        isFormSubmitted: true\n      });\n    } else {\n      this.setState({\n        isFormSubmitted: false\n      });\n    }\n    return this.state.isFormSubmitted;\n  }\n  togglePasswordVisibility() {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  }\n  validateField(name) {\n    switch (name) {\n      case \"firstName\":\n        return this.validateFirstName();\n      case \"lastName\":\n        return this.validateLastName();\n      case \"username\":\n        return this.validateUsername();\n      case \"email\":\n        return this.validateEmail();\n      case \"password\":\n        return this.validatePassword();\n      case \"phoneNo\":\n        return this.validatePhoneNo();\n      case \"country\":\n        return this.validateCountry();\n      case \"city\":\n        return this.validateCity();\n      case \"panNo\":\n        return this.validatePanNo();\n      case \"aadharNo\":\n        return this.validateAadharNo();\n      default:\n        return false;\n    }\n  }\n  validateFirstName() {\n    const value = this.state.firstName.trim();\n    const firstNameError = value === \"\" ? \"First Name is required\" : \"\";\n    this.setState({\n      firstNameError\n    });\n    return firstNameError === \"\";\n  }\n  validateLastName() {\n    const value = this.state.lastName.trim();\n    const lastNameError = value === \"\" ? \"Last Name is required\" : \"\";\n    this.setState({\n      lastNameError\n    });\n    return lastNameError === \"\";\n  }\n  validateUsername() {\n    const value = this.state.username.trim();\n    const usernameError = value === \"\" ? \"Username is required\" : \"\";\n    this.setState({\n      usernameError\n    });\n    return usernameError === \"\";\n  }\n  validateEmail() {\n    const value = this.state.email.trim();\n    let emailError = \"\";\n    if (value === \"\") {\n      emailError = \"Email Address is required\";\n    } else if (!emailValidator.test(value)) {\n      emailError = \"Email is not valid\";\n    }\n    this.setState({\n      emailError\n    });\n    return emailError === \"\";\n  }\n  validatePassword() {\n    const value = this.state.password.trim();\n    let passwordError = \"\";\n    if (value === \"\") {\n      passwordError = \"Password is required\";\n    } else if (!passwordValidator.test(value)) {\n      passwordError = \"Password must contain at least 8 characters, 1 number, 1 upper and 1 lowercase!\";\n    }\n    this.setState({\n      passwordError\n    });\n    return passwordError === \"\";\n  }\n  validatePhoneNo() {\n    const value = this.state.phoneNo.trim();\n    let phoneNoError = \"\";\n    if (value === \"\") {\n      phoneNoError = \"Phone Number is required\";\n    } else if (!phoneValidator.test(value)) {\n      phoneNoError = \"Phone Number is not valid\";\n    }\n    this.setState({\n      phoneNoError\n    });\n    return phoneNoError === \"\";\n  }\n  validateCountry() {\n    const value = this.state.country.trim();\n    const countryError = value === \"\" ? \"Country is required\" : \"\";\n    this.setState({\n      countryError\n    });\n    return countryError === \"\";\n  }\n  validateCity() {\n    const value = this.state.city.trim();\n    const cityError = value === \"\" ? \"City is required\" : \"\";\n    this.setState({\n      cityError\n    });\n    return cityError === \"\";\n  }\n  validatePanNo() {\n    const value = this.state.panNo.trim();\n    let pan;\n  }\n}","map":{"version":3,"names":["React","emailValidator","passwordValidator","panValidator","aadharValidator","phoneValidator","FormComponent","Component","constructor","state","firstName","lastName","username","email","password","showPassword","phoneNo","country","city","panNo","aadharNo","firstNameError","lastNameError","usernameError","emailError","passwordError","phoneNoError","countryError","cityError","panNoError","aadharNoError","isFormSubmitted","handleChange","bind","handleBlur","handleSubmit","togglePasswordVisibility","validateFirstName","validateLastName","validateUsername","validateEmail","validatePassword","validatePhoneNo","validateCountry","validateCity","validatePanNo","validateAadharNo","validateField","event","name","value","target","setState","preventDefault","formFields","isValid","forEach","field","prevState","trim","test","pan"],"sources":["C:/Users/KIIT/Desktop/my-react-app/Celebal/src/Components/form-component.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\r\nconst panValidator = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\r\nconst aadharValidator = /^\\d{12}$/;\r\nconst phoneValidator = /^\\+\\d{1,3}\\d{10}$/;\r\n\r\nclass FormComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      showPassword: false,\r\n      phoneNo: \"\",\r\n      country: \"\",\r\n      city: \"\",\r\n      panNo: \"\",\r\n      aadharNo: \"\",\r\n      firstNameError: \"\",\r\n      lastNameError: \"\",\r\n      usernameError: \"\",\r\n      emailError: \"\",\r\n      passwordError: \"\",\r\n      phoneNoError: \"\",\r\n      countryError: \"\",\r\n      cityError: \"\",\r\n      panNoError: \"\",\r\n      aadharNoError: \"\",\r\n      isFormSubmitted: false\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.togglePasswordVisibility = this.togglePasswordVisibility.bind(this);\r\n    this.validateFirstName = this.validateFirstName.bind(this);\r\n    this.validateLastName = this.validateLastName.bind(this);\r\n    this.validateUsername = this.validateUsername.bind(this);\r\n    this.validateEmail = this.validateEmail.bind(this);\r\n    this.validatePassword = this.validatePassword.bind(this);\r\n    this.validatePhoneNo = this.validatePhoneNo.bind(this);\r\n    this.validateCountry = this.validateCountry.bind(this);\r\n    this.validateCity = this.validateCity.bind(this);\r\n    this.validatePanNo = this.validatePanNo.bind(this);\r\n    this.validateAadharNo = this.validateAadharNo.bind(this);\r\n    this.validateField = this.validateField.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleBlur(event) {\r\n    const { name } = event.target;\r\n    this.validateField(name);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const formFields = [\r\n      \"firstName\",\r\n      \"lastName\",\r\n      \"username\",\r\n      \"email\",\r\n      \"password\",\r\n      \"phoneNo\",\r\n      \"country\",\r\n      \"city\",\r\n      \"panNo\",\r\n      \"aadharNo\"\r\n    ];\r\n    let isValid = true;\r\n    formFields.forEach(field => {\r\n      isValid = this.validateField(field) && isValid;\r\n    });\r\n\r\n    if (isValid) {\r\n      this.setState({ isFormSubmitted: true });\r\n    } else {\r\n      this.setState({ isFormSubmitted: false });\r\n    }\r\n\r\n    return this.state.isFormSubmitted;\r\n  }\r\n\r\n  togglePasswordVisibility() {\r\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\r\n  }\r\n\r\n  validateField(name) {\r\n    switch (name) {\r\n      case \"firstName\":\r\n        return this.validateFirstName();\r\n      case \"lastName\":\r\n        return this.validateLastName();\r\n      case \"username\":\r\n        return this.validateUsername();\r\n      case \"email\":\r\n        return this.validateEmail();\r\n      case \"password\":\r\n        return this.validatePassword();\r\n      case \"phoneNo\":\r\n        return this.validatePhoneNo();\r\n      case \"country\":\r\n        return this.validateCountry();\r\n      case \"city\":\r\n        return this.validateCity();\r\n      case \"panNo\":\r\n        return this.validatePanNo();\r\n      case \"aadharNo\":\r\n        return this.validateAadharNo();\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  validateFirstName() {\r\n    const value = this.state.firstName.trim();\r\n    const firstNameError = value === \"\" ? \"First Name is required\" : \"\";\r\n    this.setState({ firstNameError });\r\n    return firstNameError === \"\";\r\n  }\r\n\r\n  validateLastName() {\r\n    const value = this.state.lastName.trim();\r\n    const lastNameError = value === \"\" ? \"Last Name is required\" : \"\";\r\n    this.setState({ lastNameError });\r\n    return lastNameError === \"\";\r\n  }\r\n\r\n  validateUsername() {\r\n    const value = this.state.username.trim();\r\n    const usernameError = value === \"\" ? \"Username is required\" : \"\";\r\n    this.setState({ usernameError });\r\n    return usernameError === \"\";\r\n  }\r\n\r\n  validateEmail() {\r\n    const value = this.state.email.trim();\r\n    let emailError = \"\";\r\n    if (value === \"\") {\r\n      emailError = \"Email Address is required\";\r\n    } else if (!emailValidator.test(value)) {\r\n      emailError = \"Email is not valid\";\r\n    }\r\n    this.setState({ emailError });\r\n    return emailError === \"\";\r\n  }\r\n\r\n  validatePassword() {\r\n    const value = this.state.password.trim();\r\n    let passwordError = \"\";\r\n    if (value === \"\") {\r\n      passwordError = \"Password is required\";\r\n    } else if (!passwordValidator.test(value)) {\r\n      passwordError = \"Password must contain at least 8 characters, 1 number, 1 upper and 1 lowercase!\";\r\n    }\r\n    this.setState({ passwordError });\r\n    return passwordError === \"\";\r\n  }\r\n\r\n  validatePhoneNo() {\r\n    const value = this.state.phoneNo.trim();\r\n    let phoneNoError = \"\";\r\n    if (value === \"\") {\r\n      phoneNoError = \"Phone Number is required\";\r\n    } else if (!phoneValidator.test(value)) {\r\n      phoneNoError = \"Phone Number is not valid\";\r\n    }\r\n    this.setState({ phoneNoError });\r\n    return phoneNoError === \"\";\r\n  }\r\n\r\n  validateCountry() {\r\n    const value = this.state.country.trim();\r\n    const countryError = value === \"\" ? \"Country is required\" : \"\";\r\n    this.setState({ countryError });\r\n    return countryError === \"\";\r\n  }\r\n\r\n  validateCity() {\r\n    const value = this.state.city.trim();\r\n    const cityError = value === \"\" ? \"City is required\" : \"\";\r\n    this.setState({ cityError });\r\n    return cityError === \"\";\r\n  }\r\n\r\n  validatePanNo() {\r\n    const value = this.state.panNo.trim();\r\n    let pan\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}